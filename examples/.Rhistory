qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
#browser();
format(obj$Q,digits=16)
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
#browser();
print(format(obj$Q,digits=16))
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
print(format(obj$Q,digits=16))
print(format(new_1$Q,digits=16))
print(format(newm_1$Q,digits=16))
format(newm_1$Q,digits=16)
format(newm_1$Q,digits=16)
as.character(format(newm_1$Q,digits=16))
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
#browser();
as.character(format(newm_1$Q,digits=16))
}
}
}
return (obj)
}
as.character(format(newm_1$Q,digits=16))
newm_1 <- newman.main_algorithm(obj)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
#browser();
as.character(format(obj$Q,digits=16))
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
#browser();
print(as.character(format(obj$Q,digits=16)))
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
if(obj$N == 18) browser();
print(as.character(format(obj$Q,digits=16)))
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
obj$N
c
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
print(as.character(format(obj$Q,digits=16)))
if(obj$N == 18) browser();
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
n
n
n
n
n
n
n
n
n
n
deltaQ
i
nn
Q
newm_1 <- newman.main_algorithm(obj)
print(as.character(format(obj$Q,digits=16)))
sprintf('%.16f',obj.Q)
sprintf('%.16f',obj$Q)
sprintf('%.16f %3i %3i',obj$Q, obj$i, nn)
sprintf('%.16f %3i %3i', obj$Q, obj$i, nn)
sprintf('%.16f %3i %3i', obj$Q, i, nn)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
sprintf('%3i %3i %.16f ', obj$Q, i, nn)
if(obj$N == 18) browser();
}
}
}
return (obj)
}
Q
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
sprintf('%3i %3i %.16f ', obj$Q, i, nn)
if(obj$N == 18) browser();
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
sprintf('%3d %3d %.16f ', obj$Q, i, nn)
if(obj$N == 18) browser();
}
}
}
return (obj)
}
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
sprintf('%3d %3d %.16f ', i, nn, obj$Q)
if(obj$N == 18) browser();
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
Q
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] = -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
print(sprintf('%3d %3d %.16f ', i, nn, obj$Q))
if(obj$N == 18) browser();
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
Q
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] <- -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.000001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
print(sprintf('%3d %3d %.16f ', i, nn, obj$Q))
if(obj$N == 18) browser();
break;
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] <- -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.0001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
print(sprintf('%3d %3d %.16f ', i, nn, obj$Q))
if(obj$N == 18) browser();
break;
}
}
}
return (obj)
}
Q
newman.main_algorithm <- function(obj){
obj$N <- 1
obj$Q <- 0
obj$membership <- matrix(1,obj$n_nodes, 1)
qinc <- 1
while(qinc == 1){
qinc <- 0
nn <- obj$N
for (i in 1:nn){
nindices <- c(which(obj$membership == i))
nsize <- length(nindices)
blocal <- obj$bb_matrix[nindices,nindices]
diag(blocal) <- diag(blocal) - apply(blocal,1,sum)
max_eigenvalue_vector <- eigen(blocal)$vectors[,1]
membership_local <- matrix(1,nsize,1)
membership_local[which(max_eigenvalue_vector <= 0)] <- -1
deltaQ <- (t(membership_local) %*% blocal %*% membership_local)/(4*obj$n_edges)
if(deltaQ > 0.0001){
qinc <- 1
newind <- which(membership_local == 1)
obj$membership[nindices[newind]] <- obj$N + 1
obj$N <- obj$N + 1;
obj$Q <- obj$Q + deltaQ
print(sprintf('%3d %3d %.16f ', i, nn, obj$Q))
if(obj$N == 18) browser();
break;
}
}
}
return (obj)
}
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
newm_1 <- newman.main_algorithm(obj)
obj$bb_matrix
